{"version":3,"file":"static/js/551.05af51a2.chunk.js","mappings":"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","sources":["components/errorBoundary/ErrorBoundary.js","components/errorMessage/ErrorMessage.js","components/randomChar/RandomChar.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/charList/CharList.js","components/pages/MainPage.js","services/MarvelService.js","hooks/http.hook.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log(error, errorInfo);\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            console.log(1);\r\n            return <ErrorMessage />;\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import errorGif from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img\r\n            src={errorGif}\r\n            alt=\"Error gif\"\r\n            style={{\r\n                display: 'block',\r\n                width: '250px',\r\n                height: '250px',\r\n                objectFit: 'contain',\r\n                margin: '0 auto'\r\n            }}\r\n        />\r\n    );\r\n}\r\n\r\nexport default ErrorMessage;","import { useState, useEffect } from 'react';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nconst RandomChar = () => {\n\n    const [character, setCharacter] = useState(null);\n    const { loading, error, getCharacter, clearError } = useMarvelService();\n\n    useEffect(() => {\n        updateCharacter()\n    }, []);\n\n    const updateCharacter = () => {\n        clearError();\n\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n\n        getCharacter(id)\n            .then(setCharacter)\n            .catch(error => { throw error.message });\n    }\n\n    const errorMessage = error ? <ErrorMessage /> : null,\n        spinner = loading ? <Spinner /> : null,\n        content = !(loading || error || !character) ? <View character={character} /> : null;\n\n    return (\n        <div className=\"randomchar\">\n            {errorMessage}\n            {spinner}\n            {content}\n            <div className=\"randomchar__static\">\n                <p className=\"randomchar__title\">\n                    Random character for today!<br />\n                    Do you want to get to know him better?\n                </p>\n                <p className=\"randomchar__title\">\n                    Or choose another one\n                </p>\n                <button className=\"button button__main\" onClick={updateCharacter}>\n                    <div className=\"inner\">try it</div>\n                </button>\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\n            </div>\n        </div>\n    );\n}\n\nconst View = ({ character }) => {\n    const { thumbnail, name, description, homepage, wiki } = character,\n        thumbnailClassName = `randomchar__img ${thumbnail.includes('image_not_available') ? 'randomchar__img_un' : null}`;\n\n    return (\n        <div className='randomchar__block'>\n            <img src={thumbnail} alt=\"Random character\" className={thumbnailClassName} />\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} target=\"_blank\" rel=\"noreferrer\" className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} target=\"_blank\" rel=\"noreferrer\" className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default RandomChar;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\n\nimport './charInfo.scss';\n\nconst CharInfo = ({ charId }) => {\n\n    const [character, setCharacter] = useState(null);\n\n    const { loading, error, getCharacter, clearError } = useMarvelService();\n\n    useEffect(() => {\n        updateCharacter();\n    }, [charId]);\n\n    const updateCharacter = () => {\n        if (!charId) return;\n\n        clearError();\n\n        getCharacter(charId)\n            .then(setCharacter);\n    }\n\n    const skeleton = character || loading || error ? null : <Skeleton />,\n        errorMessage = error ? <ErrorMessage /> : null,\n        spinner = loading ? <Spinner /> : null,\n        content = !(loading || error || !character) ? <View {...character} /> : null;\n\n    return (\n        <div className=\"char__info\">\n            {skeleton}\n            {errorMessage}\n            {spinner}\n            {content}\n        </div>\n    );\n}\n\nconst View = ({ name, description, thumbnail, homepage, wiki, comics }) => {\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img\n                    className={thumbnail.includes('image_not_available') ? 'un' : ''}\n                    src={thumbnail}\n                    alt={name}\n                />\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length ? null : 'There are no comics for this character'}\n                {\n                    comics.map((item, index) => (\n                        <li className=\"char__comics-item\" key={index}>\n                            <Link to={`/MarvelPortal/comics/${item.resourceURI.match(/[^/]+$/)}`}>{item.name}</Link>\n                        </li>\n                    ))\n                }\n            </ul>\n        </>\n    );\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number,\n}\n\nexport default CharInfo;","import { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\n\nimport './charList.scss';\n\nconst CharList = props => {\n\n    const { loading, error, getAllCharacters, _baseOffset } = useMarvelService();\n\n    const [characters, setCharacters] = useState([]);\n    const [newItemsLoading, setNewItemsLoading] = useState(false);\n    const [offset, setOffset] = useState(_baseOffset);\n    const [charEnded, setCharEnded] = useState(false);\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, []);\n\n    const onRequest = (offset, initial) => {\n        setNewItemsLoading(initial ? false : true);\n\n        getAllCharacters(offset)\n            .then(onCharListLoaded)\n            .catch(error => { throw error.message });\n    }\n\n    const onCharListLoaded = (newCharacters) => {\n        let ended = false;\n\n        if (newCharacters.length < 9) ended = true;\n\n        setCharacters(characters => [...characters, ...newCharacters]);\n        setNewItemsLoading(false);\n        setOffset(offset => offset + 9);\n        setCharEnded(ended);\n    }\n\n    const itemRefs = useRef([]);\n\n    const focusOnItem = index => {\n        itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\n        itemRefs.current[index].classList.add('char__item_selected');\n\n        itemRefs.current[index].focus();\n    }\n\n    const renderItems = chars => {\n        chars = chars.map(({ id, thumbnail, name }, index) => (\n            <CSSTransition\n                key={id}\n                classNames=\"char__item\"\n                timeout={400}\n            >\n                <li\n                    tabIndex={0}\n                    ref={el => itemRefs.current[index] = el}\n                    onClick={() => {\n                        props.onCharSelected(id);\n                        focusOnItem(index);\n                    }}\n                    onKeyPress={e => {\n                        if (e.key === ' ' || e.key === 'Enter') {\n                            props.onCharSelected(id);\n                            focusOnItem(index);\n                        }\n                    }}\n                    className=\"char__item\"\n                >\n                    <img\n                        className={thumbnail.includes('image_not_available') ? 'un' : ''}\n                        src={thumbnail}\n                        alt=\"character\"\n                    />\n                    <div className=\"char__name\">{name}</div>\n                </li>\n            </CSSTransition>\n        ));\n\n        return (\n            <ul className=\"char__grid\">\n                <TransitionGroup component={null}>\n                    {chars}\n                </TransitionGroup>\n            </ul>\n        );\n    }\n\n    const errorMessage = error ? <ErrorMessage /> : null,\n        spinner = loading && !newItemsLoading ? <Spinner /> : null;\n\n    return (\n        <div className=\"char__list\">\n            {errorMessage}\n            {spinner}\n            {renderItems(characters)}\n            <button\n                className=\"button button__main button__long\"\n                onClick={() => onRequest(offset)}\n                disabled={newItemsLoading}\n                style={{ 'display': charEnded ? 'none' : 'block' }}\n            >\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    );\n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired\n}\n\nexport default CharList;","import { useState } from \"react\";\r\n\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport CharList from \"../charList/CharList\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\n\r\nimport decoration from \"../../resources/img/vision.png\";\r\n\r\nconst MainPage = () => {\r\n\r\n    const [selectedChar, setChar] = useState(null);\r\n\r\n    const onCharSelected = (id) => {\r\n        setChar(id);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <ErrorBoundary a=\"1\">\r\n                <RandomChar />\r\n            </ErrorBoundary>\r\n            <div className=\"char__content\">\r\n                <ErrorBoundary>\r\n                    <CharList onCharSelected={onCharSelected} />\r\n                </ErrorBoundary>\r\n                <ErrorBoundary>\r\n                    <div className=\"char__info-wrapper\">\r\n                        <CharInfo charId={selectedChar} />\r\n                    </div>\r\n                </ErrorBoundary>\r\n            </div>\r\n            <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MainPage;","import { useHttp } from '../hooks/http.hook';\r\n\r\nconst useMarvelService = () => {\r\n    const { loading, request, error, clearError } = useHttp();\r\n\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    const _apiKey = 'apikey=5feaf92d234eb7f2aa5a014a2bd2e75d';\r\n    const _baseOffset = 210;\r\n    const _baseComicOffset = 0;\r\n\r\n    const _transformCharacter = (character) => {\r\n        return {\r\n            id: character.id,\r\n            name: character.name,\r\n            description: character.description ? `${character.description.slice(0, 210)}...` : 'There is no description for this character',\r\n            thumbnail: character.thumbnail.path + '.' + character.thumbnail.extension,\r\n            homepage: character.urls[0].url,\r\n            wiki: character.urls[1].url,\r\n            comics: character.comics.items.splice(0, 10)\r\n        }\r\n    }\r\n\r\n    const _transformComic = (comic) => {\r\n        return {\r\n            id: comic.id,\r\n            title: comic.title || 'Title is not available',\r\n            thumbnail: comic.thumbnail.path + '.' + comic.thumbnail.extension,\r\n            price: comic.prices[0].price ? comic.prices[0].price + '$' : 'Price is not available',\r\n            pageCount: comic.pageCount ? `${comic.pageCount} pages` : 'No information about the number of pages',\r\n            language: comic.textObjects.language || 'en-us',\r\n            description: comic.description || 'There is no description'\r\n        };\r\n    }\r\n\r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    const getAllComics = async (offset = _baseComicOffset) => {\r\n        const res = await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformComic);\r\n    }\r\n\r\n    const getComic = async (id) => {\r\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n        return _transformComic(res.data.results[0]);\r\n    }\r\n\r\n    return { loading, error, getAllCharacters, getCharacter, _baseOffset, _baseComicOffset, getComic, clearError, getAllComics };\r\n}\r\n\r\nexport default useMarvelService;","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = { 'Content-Type': 'application/json' }) => {\r\n        setLoading(true);\r\n\r\n        try {\r\n            const response = await fetch(url, { method, body, headers });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            setLoading(false)\r\n            return data;\r\n        } catch (e) {\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => setError(null), []);\r\n\r\n    return { loading, request, error, clearError };\r\n};","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}"],"names":["ErrorBoundary","state","error","errorInfo","console","log","this","setState","props","children","Component","src","errorGif","alt","style","display","width","height","objectFit","margin","View","character","thumbnail","name","description","homepage","wiki","thumbnailClassName","includes","className","href","target","rel","useState","setCharacter","useMarvelService","loading","getCharacter","clearError","useEffect","updateCharacter","id","Math","floor","random","then","catch","message","errorMessage","ErrorMessage","spinner","Spinner","content","onClick","mjolnir","comics","length","map","item","index","to","resourceURI","match","charId","skeleton","getAllCharacters","_baseOffset","characters","setCharacters","newItemsLoading","setNewItemsLoading","offset","setOffset","charEnded","setCharEnded","onRequest","chars","initial","onCharListLoaded","newCharacters","ended","itemRefs","useRef","focusOnItem","current","forEach","classList","remove","add","focus","CSSTransition","classNames","timeout","tabIndex","ref","el","onCharSelected","onKeyPress","e","key","TransitionGroup","component","disabled","selectedChar","setChar","a","decoration","setLoading","setError","request","useCallback","url","method","body","headers","fetch","response","ok","Error","status","json","data","useHttp","_apiBase","_apiKey","_transformCharacter","slice","path","extension","urls","items","splice","_transformComic","comic","title","price","prices","pageCount","language","textObjects","res","results","getAllComics","getComic","_baseComicOffset","_defineProperty","obj","value","toPropertyKey","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","i","arguments","source","getOwnPropertyDescriptors","defineProperties"],"sourceRoot":""}